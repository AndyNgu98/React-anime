[{"/Users/andy/anime-project/src/index.js":"1","/Users/andy/anime-project/src/reportWebVitals.js":"2","/Users/andy/anime-project/src/App.js":"3","/Users/andy/anime-project/src/Components/Home/Home.js":"4","/Users/andy/anime-project/src/Components/Hero/Hero.js":"5","/Users/andy/anime-project/src/Components/Layout/Layout.js":"6","/Users/andy/anime-project/src/Components/Auth/Auth.js":"7","/Users/andy/anime-project/src/Context/auth-context.js":"8","/Users/andy/anime-project/src/Components/User/User.js":"9","/Users/andy/anime-project/src/Components/Logout/Logout.js":"10","/Users/andy/anime-project/src/Components/ShowList/ShowList.js":"11","/Users/andy/anime-project/src/Components/Search/Search.js":"12","/Users/andy/anime-project/src/Components/News/News.js":"13","/Users/andy/anime-project/src/Components/Favourites/Favourties.js":"14","/Users/andy/anime-project/src/Components/AnimePrieview/AnimePreview.js":"15","/Users/andy/anime-project/src/Components/Spinner/Spinner.js":"16","/Users/andy/anime-project/src/Context/fav-context.js":"17","/Users/andy/anime-project/src/Components/Card/Card.js":"18","/Users/andy/anime-project/src/Components/Footer/Footer.js":"19"},{"size":784,"mtime":1616447934657,"results":"20","hashOfConfig":"21"},{"size":362,"mtime":1611709552976,"results":"22","hashOfConfig":"21"},{"size":1574,"mtime":1616672714056,"results":"23","hashOfConfig":"21"},{"size":927,"mtime":1617224252966,"results":"24","hashOfConfig":"21"},{"size":475,"mtime":1614721369198,"results":"25","hashOfConfig":"21"},{"size":2352,"mtime":1616793436045,"results":"26","hashOfConfig":"21"},{"size":1063,"mtime":1614550233016,"results":"27","hashOfConfig":"21"},{"size":2565,"mtime":1616608556553,"results":"28","hashOfConfig":"21"},{"size":744,"mtime":1616785818997,"results":"29","hashOfConfig":"21"},{"size":325,"mtime":1616707523256,"results":"30","hashOfConfig":"21"},{"size":2028,"mtime":1616785490105,"results":"31","hashOfConfig":"21"},{"size":4286,"mtime":1616793574407,"results":"32","hashOfConfig":"21"},{"size":1837,"mtime":1615141964971,"results":"33","hashOfConfig":"21"},{"size":1687,"mtime":1616793251726,"results":"34","hashOfConfig":"21"},{"size":2326,"mtime":1614724453875,"results":"35","hashOfConfig":"21"},{"size":137,"mtime":1616340700078,"results":"36","hashOfConfig":"21"},{"size":2260,"mtime":1617224295859,"results":"37","hashOfConfig":"21"},{"size":788,"mtime":1616785754069,"results":"38","hashOfConfig":"21"},{"size":296,"mtime":1616793363570,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1nmgahg",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"42"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"42"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"42"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"/Users/andy/anime-project/src/index.js",[],["85","86"],"/Users/andy/anime-project/src/reportWebVitals.js",[],"/Users/andy/anime-project/src/App.js",[],"/Users/andy/anime-project/src/Components/Home/Home.js",["87"],"/Users/andy/anime-project/src/Components/Hero/Hero.js",[],"/Users/andy/anime-project/src/Components/Layout/Layout.js",[],"/Users/andy/anime-project/src/Components/Auth/Auth.js",[],"/Users/andy/anime-project/src/Context/auth-context.js",[],"/Users/andy/anime-project/src/Components/User/User.js",["88"],"import React, {useEffect, useContext} from 'react'\nimport {FavContext} from '../../Context/fav-context'\nimport ShowList from '../ShowList/ShowList'\nimport News from '../News/News'\nimport Hero from '../Hero/Hero'\n\nconst User = () => {\n  \n  const {loadFavourites, favourites, toggleFavourite} = useContext(FavContext)\n\n  useEffect(() => {\n    loadFavourites()\n  }, [])\n  \n  return (\n    <>\n      <Hero title=\"Your Anime\" subtitle=\"Build your collection\" heroClass='hero__user'/>\n\n      <ShowList \n        endPoint={`https://api.jikan.moe/v3/top/anime/1/favorite`}\n        favourites={favourites} \n        title='Most Popular' \n        total={4}\n        toggleFavourite={toggleFavourite}\n      />\n\n      <News/>\n    </>\n  )\n}\n\nexport default User\n","/Users/andy/anime-project/src/Components/Logout/Logout.js",[],"/Users/andy/anime-project/src/Components/ShowList/ShowList.js",["89"],"import React, {useState, useEffect, useContext} from 'react'\nimport axios from 'axios'\nimport {withRouter} from 'react-router-dom'\nimport {AuthContext} from '../../Context/auth-context'\nimport {FavContext} from '../../Context/fav-context'\nimport Card from '../Card/Card'\n\nconst ShowList = ({ favourites, title, history, endPoint, total}) => {  \n\n  const [shows, setShows] = useState([])\n  const {idToken} = useContext(AuthContext)\n  const {toggleFavourite} = useContext(FavContext)\n\n  useEffect(() => {    \n    getPopularShows()\n  },[])\n\n  const getPopularShows = () => { \n    axios.get(endPoint)\n    .then(res => {\n      const data = res.data.top.slice(0,total)\n      setShows(data)\n    })\n    .catch(err => {\n      console.log(err)\n    })  \n  }\n \n  // SENDS US TO THE ENDPOINT\n  const selectShow = (id) => {\n    history.push({pathname: `/anime-preview/${id}`})\n  }\n\n  const renderedShows = shows.map((show, i) => {\n    const found = favourites.find(favourite => favourite.mal_id === show.mal_id)\n    const classes = found ? [\"fas\", \"fa-star\", \"show-list__star--active\"] : [\"fas\", \"fa-star\", \"show-list__star\"]\n\n    let addFavourite = (\n      <>\n      </>\n    )\n\n    if(idToken !=null) {\n      addFavourite = (\n        <>\n          <span className=\"icon-text\">\n            <span className=\"icon\">\n              <i className={classes.join(' ')} onClick={() => toggleFavourite(show, found)}></i>\n            </span>\n            <p className='mt-3'>Add to Favorites</p>\n          </span>\n        </>\n      )\n    }\n  \n    return (\n      <div className=\"column\" key={show.mal_id}>\n\n        <Card \n        Cardshow={show}\n        selectShow={selectShow}\n        toggleFavourite={addFavourite}/>\n\n      </div>\n    )\n  })\n\n  return (\n    <section className=\"section\">\n      <div className=\"container has-text-centered\">\n        <h2 className='title show-list__title mb-6'>{title}</h2>\n        <div className=\"columns\">\n          { renderedShows }\n        </div>\n      </div>\n    </section>\n  )\n}\n\nexport default withRouter(ShowList)\n\n\n","/Users/andy/anime-project/src/Components/Search/Search.js",["90","91"],"import React, {useState, useEffect, useContext} from 'react'\nimport axios from 'axios'\nimport Spinner from '../Spinner/Spinner'\nimport {AuthContext} from '../../Context/auth-context'\nimport {FavContext} from '../../Context/fav-context'\nimport Card from '../Card/Card'\n\nconst Search = ({history}) => {\n\n  const [result, setResult] = useState([])\n  const [loading, setLoading] = useState(false)\n  const [search, setSearch] = useState('')\n  const [searchDisplay, setDisplay] = useState('')\n\n  const {localId, idToken} = useContext(AuthContext)\n  const {loadFavourites, favourites, toggleFavourite} = useContext(FavContext)\n\n  useEffect(() => {\n    loadFavourites(localId)\n  }, [])\n\n  useEffect(() => {\n    if(history.location.state) {\n      getAnime(history.location.state.search)\n      setDisplay(history.location.state.search)\n      history.replace({ pathname: history.location.pathname, state: null })\n    }\n  },[])\n\n  const chunkArray = (array, size) => {\n    let result = []\n    for (let i = 0; i < array.length; i += size) {\n        let chunk = array.slice(i, i + size)\n        result.push(chunk)\n    }\n    return result\n  }\n\n  const submitHandler = (e) => {\n    if(e.charCode === 13 && search) {\n      getAnime(search)\n      setDisplay(search)\n      setSearch('')\n    }\n  }\n\n  // RETRIEVE ANIME FROM SEARCH BAR\n  const getAnime = (query) => {\n    setLoading(true)\n    axios.get(`https://api.jikan.moe/v3/search/anime?q=${query}&order_by=title&sort=asc&limit=16`)\n    .then(response => {\n      setLoading(false)\n      setResult(chunkArray(response.data.results, 4)) \n    })\n    .catch((error) => {\n      setLoading(false)\n      console.log(error)\n    })\n  }\n\n  const selectShow = (id) => {\n    history.push({pathname: `/anime-preview/${id}`})\n  }\n  \n  let searchDisplayMessage = <p className=\"subtitle search__subtitle\">SEARCH:</p>\n  if (searchDisplay) {\n    searchDisplayMessage = (\n      <>\n        <p className=\"subtitle search__subtitle\">SEARCH RESULTS:</p>\n        <p className=\"title search__title\">{searchDisplay}</p>\n      </>\n    )\n  }\n\n  let searchShow = <Spinner/>\n  \n  // IF NOT BUFFERING SHOW SHOWLIST\n  if(!loading) {\n    // MAP THROUGH FIRST ARRAY\n    searchShow = result.map((show, i) => {\n      // RETURN ARRAY INTO 4 ROWS OF COLUMNS\n      return (\n        <div className='columns' key={i}>\n          {\n            // SECOND MAP TO GET SINGLE SHOW\n            show.map((anime) => {\n              // CHANGED SHOW.MAL_ID TO ANIME.MAL_ID\n              const found = favourites.find(favourite => favourite.mal_id === anime.mal_id)\n              const classes = found ? [\"fas\", \"fa-star\", \"show-list__star--active\"] : [\"fas\", \"fa-star\", \"show-list__star\"]\n\n              let addFavourite = (\n                <>\n                </>\n              )\n\n              if(idToken !=null) {\n                addFavourite = (\n                  <>\n                    <span className=\"icon-text\">\n                      <span className=\"icon\">\n                        {/* PASSED ON ANIME INTO SHOW */}\n                        <i className={classes.join(' ')} onClick={() => toggleFavourite(anime, found)}></i>\n                      </span>\n                      <p className='mt-3'>Add to Favorites</p>\n                    </span>\n                  </>\n                )\n              }\n              \n            return (\n              <div className=\"column\" key={anime.mal_id}>\n\n                <Card\n                Cardshow={anime}\n                selectShow={selectShow}\n                toggleFavourite={addFavourite}\n                />                \n\n              </div>\n              )\n            })\n          }\n        </div>\n      ) \n    })\n  }\n    \n  return (\n    <>\n      <div className='hero is-medium search'> \n        <div className='hero-body hero__overlay'>\n          <div className='container search__container has-text-centered'>\n            {searchDisplayMessage}\n            <input className='input search__input' placeholder='Search for Anime' value={search} onChange={e => setSearch(e.target.value)} onKeyPress={(e) => submitHandler(e)}/>\n\n          </div>\n        </div>\n      </div>\n      \n      <div className='section'>\n        <div className='container'>\n            {searchShow}\n        </div>      \n      </div>\n    </>\n  )\n}\n\nexport default Search\n","/Users/andy/anime-project/src/Components/News/News.js",["92"],"import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\n\nconst News = () => {\n\n  const [news, setNews] = useState([])\n\n  useEffect(() => {\n    getNews()\n  }, [])\n\n  const chunkArray = (array, size) => {\n    let result = []\n    for (let i = 0; i < array.length; i += size) {\n        let chunk = array.slice(i, i + size)\n        result.push(chunk)\n    }\n    return result\n  }\n\n  const getNews = () => {\n    axios.get('https://api.jikan.moe/v3/anime/1/news')\n    .then(res => {\n      setNews(chunkArray(res.data.articles.slice(0,6), 2))\n    })\n    .catch(error => console.log(error))\n  }\n\n  let renderedNews = news.map((letter) => (\n    letter.map((read, i) => (\n      <div className='columns' key={i}>\n        <div className='column'>\n          <div className=\"card mb-4\" >\n            <div className=\"card-content\">\n              <div className=\"media\">\n                <div className=\"media-left\">\n                  <figure className=\"image is-48x48\">\n                    <img src={read.image_url} alt=''/>   \n                  </figure>\n                </div>\n                <div className=\"media-content\">\n                  <p className=\"title is-4\">{read.title}</p>\n                  <p className=\"subtitle is-6\">{`Author: ${read.author_name}` }</p>\n                </div>\n              </div>\n              <div className=\"content\">\n                <p>{read.intro} <a target=\"_blank\" rel=\"noreferrer\" href={read.url}>Read more</a></p>\n                <p>{`Published: ${new Date(read.date).toDateString()}`}</p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    ))\n  ))\n\n  return (\n    <section className='section news'>\n      <div className='container'>\n      <h1 className=\"title\">News</h1>\n        {renderedNews}\n      </div>\n    </section>\n  )\n}\n\nexport default News\n\n\n\n\n","/Users/andy/anime-project/src/Components/Favourites/Favourties.js",["93","94"],"import React, {useContext, useEffect} from 'react'\nimport Hero from '../Hero/Hero'\nimport {FavContext} from '../../Context/fav-context'\nimport Card from '../Card/Card'\n\nconst Favourites = ({history}) => {\n  const {loadFavourites, favourites, deleteFavourite} = useContext(FavContext)\n\n  useEffect(() => {\n    loadFavourites()\n  }, [])\n\n  const selectShow = (id) => {\n    history.push({pathname: `/anime-preview/${id}`})\n  }\n\n  const showFavourites = favourites.map((favourite, i) => {\n    const found = favourites.find(favourite => favourite.mal_id === favourite.mal_id)\n    const classes = found ? [\"fas\", \"fa-star\", \"show-list__star--active\"] : [\"fas\", \"fa-star\", \"show-list__star\"]\n\n    let removeFavourite = (\n      <>\n        <span className=\"icon-text\">\n          <span className=\"icon\">\n            <i className={classes.join(' ')} onClick={() => deleteFavourite(favourite.key)}></i>\n          </span>\n          <p className='mt-3'>Remove From Favourites</p>\n        </span>\n      </>\n    )\n\n    return (\n      <div className=\"column is-one-quarter\" key={favourite.mal_id}>\n\n        <Card \n        Cardshow={favourite}\n        selectShow={selectShow}\n        toggleFavourite={removeFavourite}\n        />\n\n      </div>\n    )\n  })\n\n  return (\n    <>\n      <Hero title=\"Your Anime\" subtitle=\"Build your collection\" heroClass='hero__user'/>\n\n      <section className=\"section \">\n        <div className=\"container has-text-centered \">\n          <h2 className='title show-list__title mb-6'>Your Favourite Anime</h2>\n          <div className=\"columns is-multiline\">\n            { showFavourites }\n          </div>\n        </div>\n      </section>\n    </>\n  )\n}\n\nexport default Favourites\n","/Users/andy/anime-project/src/Components/AnimePrieview/AnimePreview.js",["95"],"import React, {useEffect, useState} from 'react';\nimport axios from 'axios'\n\nconst AnimePreview = (props) => {\n\n  const [anime, setAnime] = useState([])\n  const [characters, setCharacter] = useState([])\n\n  useEffect(() => {\n    getAnime()\n  },[])\n\n  const getAnime = () => {\n    axios.get(`https://api.jikan.moe/v3/anime/${props.match.params.id}`)\n    .then(res => {\n      setAnime(res.data)\n      getCharacter()\n    })\n    .catch((err) => {\n      console.log(err)\n    })\n  }\n\n  const getCharacter = () => {\n    axios.get(`https://api.jikan.moe/v3/anime/${props.match.params.id}/characters_staff`)\n    .then(res => {\n      setCharacter(res.data.characters.slice(0,6))\n    })\n    .catch((err) => {\n      console.log(err)\n    })\n  }\n\n\n  let trailer = null\n\n  if(anime.trailer_url) {\n    trailer = <iframe title=\"Anime Trailer\" width=\"100%\" height=\"600px\" src={anime.trailer_url}></iframe>\n\n  }\n\n  return (\n    <>\n      {trailer}\n      <section className='section'>\n        <div className='container'>\n          <div className='columns'>\n            <div className='column is-one-quarter'>\n              <img className='preview__img' src={anime.image_url} alt={anime.title}/>\n            </div>\n            <div className='column'>\n              <h1 className='title mb-6'><a className='preview__link' target=\"_blank\" rel=\"noreferrer\" href={anime.url}>{anime.title}</a></h1>\n              <p className='subtitle'>{anime.synopsis}</p>\n              <p className='subtitle'>\n                { anime.score ? `Scored: ${anime.score}` : null }\n                <br />\n                {anime.rating ? `Rating: ${anime.rating}` : null}  \n              </p>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      <section className='section preview'>\n        <div className='container'>\n          <div className='columns'>\n          {\n            characters.map((character) => (\n              <div className='column preview__character-img' key={character.mal_id}>\n                <img className='mb-3' src={character.image_url} alt={character.name}/>\n                <p><a className='preview__link' href={character.url} rel=\"noreferrer\">{character.name}</a></p>\n              </div>\n            ))\n          }\n          </div>\n        </div>\n      </section>  \n    </>\n  )\n}\n\n            \n\nexport default AnimePreview\n","/Users/andy/anime-project/src/Components/Spinner/Spinner.js",[],"/Users/andy/anime-project/src/Context/fav-context.js",[],"/Users/andy/anime-project/src/Components/Card/Card.js",[],"/Users/andy/anime-project/src/Components/Footer/Footer.js",[],{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","severity":1,"message":"101","line":10,"column":6,"nodeType":"102","endLine":10,"endColumn":8,"suggestions":"103"},{"ruleId":"100","severity":1,"message":"101","line":13,"column":6,"nodeType":"102","endLine":13,"endColumn":8,"suggestions":"104"},{"ruleId":"100","severity":1,"message":"105","line":16,"column":5,"nodeType":"102","endLine":16,"endColumn":7,"suggestions":"106"},{"ruleId":"100","severity":1,"message":"107","line":20,"column":6,"nodeType":"102","endLine":20,"endColumn":8,"suggestions":"108"},{"ruleId":"100","severity":1,"message":"109","line":28,"column":5,"nodeType":"102","endLine":28,"endColumn":7,"suggestions":"110"},{"ruleId":"100","severity":1,"message":"111","line":10,"column":6,"nodeType":"102","endLine":10,"endColumn":8,"suggestions":"112"},{"ruleId":"100","severity":1,"message":"101","line":11,"column":6,"nodeType":"102","endLine":11,"endColumn":8,"suggestions":"113"},{"ruleId":"114","severity":1,"message":"115","line":18,"column":48,"nodeType":"116","messageId":"117","endLine":18,"endColumn":85},{"ruleId":"100","severity":1,"message":"118","line":11,"column":5,"nodeType":"102","endLine":11,"endColumn":7,"suggestions":"119"},"no-native-reassign",["120"],"no-negated-in-lhs",["121"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadFavourites'. Either include it or remove the dependency array.","ArrayExpression",["122"],["123"],"React Hook useEffect has a missing dependency: 'getPopularShows'. Either include it or remove the dependency array.",["124"],"React Hook useEffect has missing dependencies: 'loadFavourites' and 'localId'. Either include them or remove the dependency array.",["125"],"React Hook useEffect has missing dependencies: 'getAnime' and 'history'. Either include them or remove the dependency array.",["126"],"React Hook useEffect has a missing dependency: 'getNews'. Either include it or remove the dependency array.",["127"],["128"],"no-self-compare","Comparing to itself is potentially pointless.","BinaryExpression","comparingToSelf","React Hook useEffect has a missing dependency: 'getAnime'. Either include it or remove the dependency array.",["129"],"no-global-assign","no-unsafe-negation",{"desc":"130","fix":"131"},{"desc":"130","fix":"132"},{"desc":"133","fix":"134"},{"desc":"135","fix":"136"},{"desc":"137","fix":"138"},{"desc":"139","fix":"140"},{"desc":"130","fix":"141"},{"desc":"142","fix":"143"},"Update the dependencies array to be: [loadFavourites]",{"range":"144","text":"145"},{"range":"146","text":"145"},"Update the dependencies array to be: [getPopularShows]",{"range":"147","text":"148"},"Update the dependencies array to be: [loadFavourites, localId]",{"range":"149","text":"150"},"Update the dependencies array to be: [getAnime, history]",{"range":"151","text":"152"},"Update the dependencies array to be: [getNews]",{"range":"153","text":"154"},{"range":"155","text":"145"},"Update the dependencies array to be: [getAnime]",{"range":"156","text":"157"},[249,251],"[loadFavourites]",[363,365],[533,535],"[getPopularShows]",[674,676],"[loadFavourites, localId]",[912,914],"[getAnime, history]",[177,179],"[getNews]",[331,333],[243,245],"[getAnime]"]